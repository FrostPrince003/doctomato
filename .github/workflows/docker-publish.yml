name: Build and Push Docker Image

on:
  push:
    branches:
      - main  # Trigger the workflow on push to the main branch
  pull_request:  # Optional: Trigger on pull requests to test builds
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the code
    - name: Checkout code
      uses: actions/checkout@v3

    # Step 2: Set up Python (to run tests)
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.12.4"  # Use the Python version your project requires

    # Step 3: Install dependencies
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt  # Make sure you have a requirements.txt file with necessary dependencies, e.g., pytest

    # Step 4: Run tests
    - name: Run Tests
      run: |
        pytest --maxfail=1 --disable-warnings -q  # Run tests (customize as needed)

    # Step 5: Log in to Docker Hub
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # Step 6: Build Docker image
    - name: Build Docker Image
      run: docker build -t frostprince003/tomato-disease-detection:latest .

    # Step 7: Push Docker image to Docker Hub
    - name: Push Docker Image
      run: docker push frostprince003/tomato-disease-detection:latest

  # Optional: Test only job (to run tests in isolation)
  test-only:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12.4"  # Use the Python version your project requires

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt  # Ensure requirements.txt includes pytest

      - name: Run Tests
        run: |
          pytest test_app.py --maxfail=1 --disable-warnings -q  # Run tests (customize as needed)